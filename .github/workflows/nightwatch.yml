# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Nightwatch Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: yarn-install
        run: yarn install
      - run: sudo apt-get install xvfb

      - name: Run Nightwatch tests
        run: xvfb-run --auto-servernum npm run test.axe -- --env chrome
        env:
          TEST_RESULTS_PATH: ${{ github.workspace }}/tests_output/axe.json

      - name: Archive test artifacts
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test_results
          path: |
            tests_output

      #- name: Test Report
      #  uses: phoenix-actions/test-reporting@v8
      #ÃŸ  id: test-report               # Set ID reference for step
      #  if: success() || failure()
      #  with:
          #artifact: test-results
      #    fail-on-error: false
      #    name: Mocha Tests            # Name of the check run which will be created
      #    path: tests_output/*.json    # Path to test results
      #    reporter: mocha-json
  report:
    needs: test
    if: ${{ always()  }}
    permissions:
      id-token: write
      contents: read
      checks: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: test_results
          path: ~/artifact
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: /home/runner/artifact
      - uses: dorny/test-reporter@v1
        with:
          #artifact:  test_results        # artifact name
          fail-on-error: 'false'
          name: Mocha Tests            # Name of the check run which will be created
          path: /home/runner/artifact/axe.json    # Path to test results
          reporter: mocha-json



